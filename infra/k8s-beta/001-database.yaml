apiVersion: v1
kind: ConfigMap
metadata:
  name: database-config
  namespace: beta

data:
  postgres.conf: |2
    ## Replication configs
    listen_addresses = '*'
    max_wal_senders = 10
    max_connections = 100
    shared_buffers = 128MB

    # Replication configs - kubegres default overrides
    logging_collector = 'off'
    log_destination = 'stderr,csvlog'
    log_directory = '/var/log/postgresql/'
    log_filename= 'postgresql-%Y-%m-%d_%H%M%S.log'

    # Database statistics
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.max = 10000
    pg_stat_statements.track = all

    log_statement = 'none'
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    log_min_duration_statement = 0
  primary_init_script.sh: |
    #!/bin/bash
    set -e

    # This script assumes that the env-var $APIV2_PASSWORD contains the password of the custom user to create.
    # You can add any env-var in your Kubegres resource config YAML.

    dt=$(date '+%d/%m/%Y %H:%M:%S');
    echo "$dt - Running init script the 1st time Primary PostgreSql container is created...";

    psql -v ON_ERROR_STOP=1 --username postgres --dbname "$POSTGRES_DB" <<-EOSQL
      CREATE ROLE fk LOGIN SUPERUSER PASSWORD '$POSTGRES_PASSWORD';
      CREATE DATABASE fk OWNER fk;
    EOSQL

    echo "$dt - Init script is completed";
---
apiVersion: kubegres.reactive-tech.io/v1
kind: Kubegres
metadata:
  name: postgres
  namespace: beta

spec:
  replicas: 1
  image: postgres:14
  port: 5432

  database:
     size: 500Mi

  customConfig: database-config

  env:
    - name: TZ
      value: Europe/Oslo
    - name: POSTGRES_PASSWORD
      valueFrom:
         secretKeyRef:
            name: database
            key: POSTGRES_PASSWORD
    - name: POSTGRES_REPLICATION_PASSWORD
      valueFrom:
         secretKeyRef:
            name: database
            key: POSTGRES_REPLICATION_PASSWORD
