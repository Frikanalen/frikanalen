operatorNamespace: rook-ceph


cephClusterSpec:
  dashboard:
    enabled: true
    ssl: false

toolbox:
  enabled: true

monitoring:
  enabled: true
  createPrometheusRules: true

ingress:
  dashboard:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: default-basic-admin-auth@kubernetescrd
    tls:
      hosts:
        - ceph.frikanalen.no

cephBlockPools:
  - name: replicapool
    spec: 
      erasureCoded:
        codingChunks: 0
        dataChunks: 0
      failureDomain: host
      mirroring: {}
      quotas: {}
      replicated:
        requireSafeReplicaSize: true
        size: 3
      statusCheck:
        mirror: {}
    storageClass:
      enabled: true
      name: rook-ceph-block
      isDefault: true
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      parameters:
        imageFormat: "2"
        imageFeatures: layering
        csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
        csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
        csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
        csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
        csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
        csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
        csi.storage.k8s.io/fstype: ext4
        pool: replicapool

cephObjectStores:
  - name: media-store
    spec:
      dataPool:
        erasureCoded:
          codingChunks: 1
          dataChunks: 2
        failureDomain: host
        replicated:
          size: 1
      gateway:
        instances: 1
        port: 80
      healthCheck:
        bucket:
          interval: 1m0s
      metadataPool:
        failureDomain: host
        replicated:
          size: 3
      preservePoolsOnDelete: true
      zone:
        name: ""
    storageClass:
      enabled: false
