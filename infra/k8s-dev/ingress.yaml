apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: atem-cors
  namespace: default
spec:
  headers:
    customResponseHeaders:
      Access-Control-Allow-Origin: "*"
      Access-Control-Allow-Headers: "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
      Access-Control-Allow-Methods: "POST"
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-atem-prefix
  namespace: default
spec:
  stripPrefix:
    prefixes:
      - /api/playout/atem
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: atem-control
  namespace: default
spec:
  entryPoints: 
    - web
  routes:
  - match: Host(`fk.dev.local`) && PathPrefix(`/api/playout/atem/`)
    kind: Rule
    middlewares:
      - name: strip-atem-prefix
        namespace: default
      - name: atem-cors
        namespace: default
    services:
    - kind: Service
      name: atem-control
      scheme: http
      port: 8089
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: linkerd-dashboard-host-override
  namespace: linkerd
spec:
  headers:
    customRequestHeaders:
      Host: "localhost"
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: linkerd-dashboard
  namespace: linkerd
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`admin.fk.dev.local`)
    kind: Rule
    middlewares:
      - name: linkerd-dashboard-host-override
        namespace: linkerd
    services:
    - name: linkerd-web
      kind: Service
      scheme: http
      port: 8084
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: django-admin
  namespace: default
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`fk.dev.local`) && PathPrefix(`/admin`)
    kind: Rule
    services:
    - name: django
      kind: Service
      scheme: http
      port: 8002
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: django-static
  namespace: default
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`fk.dev.local`) && PathPrefix(`/static`)
    kind: Rule
    services:
    - name: django
      kind: Service
      scheme: http
      port: 8002
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: django-xmltv
  namespace: default
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`fk.dev.local`) && PathPrefix(`/xmltv`)
    kind: Rule
    services:
    - name: django
      kind: Service
      scheme: http
      port: 8002
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: django-api
  namespace: default
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`fk.dev.local`) && PathPrefix(`/api`)
    kind: Rule
    services:
    - name: django
      kind: Service
      scheme: http
      port: 8002
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: frontend
  namespace: default
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`fk.dev.local`)
    kind: Rule
    services:
    - name: frontend
      kind: Service
      scheme: http
      port: 3000
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: upload-receiver
  namespace: default
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`fk.dev.local`) && (PathPrefix(`/api/videos/upload`))
    kind: Rule
    services:
    - kind: Service
      name: upload-receiver
      scheme: http
      port: 1080
---
kind: IngressRoute
apiVersion: traefik.containo.us/v1alpha1
metadata:
  name: s3-backend
  namespace: default
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`s3.fk.dev.local`) 
    kind: Rule
    services:
    - kind: Service
      name: s3-ninja
      scheme: http
      port: 9000
