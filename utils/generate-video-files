#!/bin/sh

set -e

cd /tank/new_media/media/

oldduration() {
    # duration in seconds of first stream
    ffprobe  -show_streams "$1" 2>/dev/null | grep '^duration=' | grep -v 'N/A' | \
        cut -d= -f2 | head -1 | cut -d. -f1
}

newduration() {
  ms=$(mediainfo --Inform='General;%Duration%' "$1")
  echo $(($ms / 1000))
}

duration() {
  count=$(melt "$1" -consumer xml | grep length |cut -d'>' -f2 | cut -d'<' -f1)
  echo $count
}

fixperms() {
    chgrp fkmedia_rw "$1"
    chmod g+w "$1"
}

makedir() {
   dir="$1"
   if [ -d "$dir" ] || mkdir "$dir" ; then
       fixperms "$dir"
       return 0
   else
       return 1
   fi
}

orig2ogv() {
    id="$1"
    orig="$2"
    theora="$3"
    echo "$id ->" "$orig" "$theora"
    duration=$(duration "$orig")
    if ffmpeg \
	-nostats \
	-i "$orig" \
	-v verbose \
	-y \
	-threads 8 \
	-vcodec libtheora \
	-acodec libvorbis \
	-qscale:v 7 \
	-qscale:a 2 \
	-vf scale=720:-1 \
	"$theora.new.ogv"
    then
	fixperms "$theora.new.ogv"
        ogvduration="$(duration "$theora.new.ogv")"
        # Reject file if the time difference is more than two seconds
        durdiff=$(echo "($duration - $ogvduration)^2" | bc -l)
        if [ "$durdiff" -le 4 ] ; then
	    mv "$theora.new.ogv" "$theora"
        else
            echo "error: incorrect duration $ogvduration do not match original $duration, removing $theora.new.ogv."
#            ffprobe -show_streams "$theora.new.ogv"
#            exit 0
	    rm -f "$theora.new.ogv"
        fi
    else
        echo "error: ffmpeg failed, removing file $theora.new.ogv."
	rm -f "$theora.new.ogv"
    fi
}

orig2broadcast() {
    id="$1"
    orig="$2"
    bcast="$3"
    echo "$id ->" "$orig" "$bcast"
    duration=$(duration "$orig")
    if ffmpeg \
	-nostats \
	-y \
	-i "$orig" \
	-target pal-dv \
	"$bcast.new.dv"
    then
	fixperms "$bcast.new.dv"
        dvduration="$(duration "$bcast.new.dv")"
        # Reject file if the time difference is more than two seconds
        durdiff=$(echo "($duration - $dvduration)^2" | bc -l)
        if [ "$durdiff" -le 4 ] ; then
	    mv "$bcast.new.dv" "$bcast"
        else
            echo "error: incorrect duration $dvduration do not match original $duration, removing $bcast.new.dv."
	    rm -f "$bcast.new.dv"
        fi
    else
        echo "error: ffmpeg failed, removing file $bcast.new.dv."
	rm -f "$bcast.new.dv"
    fi
}

if [ "$1" ] ; then
    ids="$*"
else
    ids="$(ls -dr [0-9]*)"
fi
for id in $ids ; do
    theora=""
    orig=""
#    echo ============
    for file in $id/*/*; do
#        echo "$file"
	case "$file" in
	    */theora/*.new.ogv) # Ignore
		;;
	    */theora/*.ogv)
		theora="$file"
		;;
	    */original/*)
		orig="$file"
		;;
	    */broadcast/*.new.dv) # Ignore
		;;
	    */broadcast/*)
                broadcast="$file"
		;;
	esac
    done
    if [ "$orig" ] && [ -z "$broadcast" ]; then
        b=$(basename "$orig" |cut -d. -f-1)
        bcast="$id/broadcast/$b.dv"
        if makedir "$id/broadcast" ; then
            orig2broadcast "$id" "$orig" "$bcast"
	fi
    fi
    if [ "$broadcast" ] && [ -z "$orig" ]; then
        orig="$broadcast"
    fi
    if [ "$orig" ] && [ -z "$theora" ]; then
        b=$(basename "$orig" |cut -d. -f-1)
        theora="$id/theora/$b.ogv"
        if makedir "$id/theora" ; then
	    orig2ogv "$id" "$orig" "$theora"
	fi
    fi
done
