#!/usr/bin/env python3

import pexpect
import time
import re
import os
import sys

class ObeExpecter():
    PROMPT = r'obecli> '

    def __init__(self):
        self.obe = pexpect.spawn('/usr/bin/obecli', encoding='utf-8')
        self.obe.setecho(False)
        self.obe.waitnoecho()
        self.obe.logfile = sys.stdout

    def wait(self):
        while True:
            a = self.obe.read_nonblocking(timeout=None)

    def start(self):
        self.obe.expect(self.PROMPT)
        self.obe.sendline('set input decklink')
        time.sleep(1)
        self.obe.sendline('probe input')
        index = self.obe.expect(r'Probing.*\n')

        index = self.obe.expect(r'(?P<probe_data>.*)obecli> ')
        probe_data = self.obe.match.groups('probe_data')[0]

        for discovery in re.findall( '    Input-stream-id: (?P<in_stream_id>\d*) - (?P<in_stream_type>\w*): (?P<in_stream_format>.+) \n', probe_data):
            print(discovery)

        for discovery in re.findall( '    Output-stream-id: (?P<out_stream_id>\d*) - Input-stream-id: (?P<in_stream_id>\d*) - (?P<out_stream_type>\w*): (?P<out_stream_format>.+) \n', probe_data):
            print(discovery)

        self.obe.sendline('set stream opts 0:' + self.video_opts)
        self.obe.expect(self.PROMPT)
        self.obe.sendline('set stream opts 1:' + self.audio_opts)
        self.obe.expect(self.PROMPT)
        self.obe.sendline('set muxer opts ' + self.mux_opts)
        self.obe.expect(self.PROMPT)
        self.obe.sendline('set outputs 1')
        self.obe.expect(self.PROMPT)
        self.obe.sendline('set output opts 0:type=udp,target=udp://192.168.3.1:5561')
        self.obe.expect(self.PROMPT)
        self.obe.sendline('start')
        self.obe.expect('Encoding started')

obe = ObeExpecter()

try:
    obe.video_opts = os.environ['VIDEO_OPTS']
    obe.audio_opts = os.environ['AUDIO_OPTS']
    obe.mux_opts = os.environ['MUX_OPTS']
except KeyError:
    print('Fatal error: Encoding settings must be set in environment')
    print('Usually this is done by setting values in /etc/fk-obe')
    sys.exit(1)

obe.start()
print("OBE started!")
obe.wait()
