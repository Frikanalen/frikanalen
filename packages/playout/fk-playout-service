#!/usr/bin/env python3
import logging
import os
import sys
from logging import handlers

from scheduler import Schedule
from vision import playout
from vision.configuration import configuration


def logging_excepthook(type, value, tb):
    "Exception handler that logs"
    logging.debug("Unhandled exception", exc_info=(type, value, tb))
    # continue processing the exception
    sys.__excepthook__(type, value, tb)

def setup_logging():
    fmt = ("%(asctime)s %(levelname)s:%(name)s "
               "%(filename)s:%(lineno)d %(message)s")
    logging.basicConfig(level=logging.DEBUG, format=fmt)
    logger = logging.getLogger()
    logger.setLevel(logging.DEBUG)

    handler = logging.StreamHandler()
    handler.setLevel(logging.DEBUG)

    handler.setFormatter(logging.Formatter(fmt))
    logger.addHandler(handler)
    sys.excepthook = logging_excepthook

if __name__ == "__main__":
    setup_logging()
    logging.info("FK Integrated Playout started")
    logging.info("Configuration details:\n%s" % configuration.__repr__())

    # Create today's schedule
    schedule = Schedule()
    # Start the player
    playout_service = playout.PlayoutService()
    playout = playout.Playout(service=playout_service)

    # Setting the schedule starts playback
    playout.attach_schedule(schedule)

    # Heat up the reactor
    from twisted.internet import reactor
    reactor.run()
